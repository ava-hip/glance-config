- name: medias
  columns:
    - size: small
      widgets:
        - type: calendar
          first-day-of-week: monday
          hide-header: true

        - type: weather
          units: metric
          hour-format: 24h
          location: Montpellier, France
          hide-header: true

        - type: to-do
          title: To-do
          id: todo
          hide-header: true


    - size: full
      widgets:
        - type: group
          widgets:
            - type: custom-api
              title: Recently Added Movies
              cache: 5m
              url: ${RADARR_URL}/api/v3/history?eventType=3&includeMovie=true
              headers:
                Accept: application/json
                X-Api-Key: ${RADARR_KEY}
              template: |
                <ul class="list list-gap-14 collapsible-container" data-collapse-after="5">
                  {{ range .JSON.Array "records" }}
                  <li>
                      <div class="flex gap-10 row-reverse-on-mobile thumbnail-parent">
                          <div class="shrink-0" data-popover-type="html">
                            <div data-popover-html="">
                                <img src="{{ .String "movie.images.0.remoteUrl" }}" loading="lazy" alt="">
                            </div>
                            <img class="twitch-category-thumbnail thumbnail" src="{{ .String "movie.images.0.remoteUrl" }}" alt="{{ .String "movie.title" }}" loading="lazy">
                          </div>
                          <div class="grow min-width-0">
                              <a href="${RADARR_URL}/movie/{{ .String "movie.titleSlug" }}" class="color-highlight size-title-dynamic block text-truncate" target="_blank" rel="noreferrer">{{ .String "movie.title" }}</a>
                              <ul class="list-horizontal-text flex-nowrap text-compact">
                                  <li class="shrink-0">{{ .String "movie.year" }}</li>
                                  <li class="shrink-0">{{ .String "movie.ratings.imdb.value" }}</li>
                              </ul>
                              <ul class="list-horizontal-text flex-nowrap text-truncate">
                                {{ range .Array "movie.genres" }}
                                  <li>{{ .String "" }}</li>
                                {{ end }}
                              </ul>
                          </div>
                      </div>
                  </li>
                  {{ end }}
                </ul>

            - type: custom-api
              title: Recently Added Episodes
              cache: 5m
              url: ${SONARR_URL}/api/v3/history?eventType=3&includeSeries=true&includeEpisode=true
              headers:
                Accept: application/json
                X-Api-Key: ${SONARR_KEY}
              template: |
                <ul class="list list-gap-14 collapsible-container" data-collapse-after="5">
                  {{ range .JSON.Array "records" }}
                  <li>
                      <div class="flex gap-10 row-reverse-on-mobile thumbnail-parent">
                          <div class="shrink-0" data-popover-type="html">
                            <div data-popover-html="">
                                <img src="{{ .String "series.images.1.remoteUrl" }}" loading="lazy" alt="">
                            </div>
                            <img class="twitch-category-thumbnail thumbnail" src="{{ .String "series.images.1.remoteUrl" }}" alt="{{ .String "episode.title" }}" loading="lazy">
                          </div>
                          <div class="grow min-width-0">
                            <a href="${SONARR_URL}/series/{{ .String "series.titleSlug" }}" class="color-highlight size-title-dynamic block text-truncate" target="_blank" rel="noreferrer">{{ .String "episode.title" }}</a>
                            <div>{{ .String "series.title" }}</div>
                            <ul class="list-horizontal-text">
                              <li>S{{ .String "episode.seasonNumber" }}</li>
                              <li>E{{ .String "episode.episodeNumber" }}</li>
                            </ul>
                          </div>
                      </div>
                  </li>
                  {{ end }}
                </ul>
        
        - type: custom-api
          title: Media History
          frameless: true
          cache: 5m
          options:
            media-server: "tautulli"
            base-url: ${TAUTULLI_URL}
            api-key: ${TAUTULLI_KEY}
            history-length: "10"
            small-column: false
            compact: true
            show-thumbnail: true
            thumbnail-aspect-ratio: "default"
            show-user: true
            time-absolute: false
            time-format: "Jan 02 15:04"
          template: |
            {{ $mediaServer := .Options.StringOr "media-server" "" }}
            {{ $baseURL := .Options.StringOr "base-url" "" }}
            {{ $apiKey := .Options.StringOr "api-key" "" }}
            {{ $userName := .Options.StringOr "user-name" "" }}

            {{ define "errorMsg" }}
              <div class="widget-error-header">
                <div class="color-negative size-h3">ERROR</div>
                <svg class="widget-error-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z"></path>
                </svg>
              </div>
              <p class="break-all">{{ . }}</p>
            {{ end }}

            {{ if or
              (eq $mediaServer "")
              (eq $baseURL "")
              (eq $apiKey "")
              (and (eq $mediaServer "jellyfin") (eq $userName ""))
            }}
              {{ template "errorMsg" "Some required options are not set" }}
            {{ else }}

            {{ $historyLength := .Options.StringOr "history-length" "10" }}
            {{ $mediaTypes := .Options.StringOr "media-types" "" }}
            {{ if eq $mediaServer "tautulli" }}
              {{ $mediaTypes = .Options.StringOr "media-types" "movie,episode,track" }}
            {{ else if or (eq $mediaServer "jellyfin") (eq $mediaServer "emby") }}
              {{ $mediaTypes = .Options.StringOr "media-types" "Movie,Episode,Audio" }}
            {{ end }}
            {{ $isSmallColumn := .Options.BoolOr "small-column" false }}
            {{ $isCompact := .Options.BoolOr "compact" true }}
            {{ $showThumbnail := .Options.BoolOr "show-thumbnail" false }}
            {{ $thumbAspectRatio := .Options.StringOr "thumbnail-aspect-ratio" "" }}
            {{ $showUser := .Options.BoolOr "show-user" true }}
            {{ $timeAbsolute := .Options.BoolOr "time-absolute" false }}
            {{ $timeFormat := .Options.StringOr "time-format" "Jan 02 15:04" }}

            {{ $userID := "" }}
            {{ $historyRequestURL := "" }}
            {{ $usersRequestURL := "" }}
            {{ $historyCall := "" }}
            {{ $usersCall := "" }}
            {{ $history := "" }}
            {{ $users := "" }}

            {{ if eq $mediaServer "plex" }}
              {{ $historyRequestURL = concat $baseURL "/status/sessions/history/all" }}
              {{ $historyCall = newRequest $historyRequestURL
                | withParameter "limit" $historyLength
                | withParameter "sort" "viewedAt:desc"
                | withHeader "Accept" "application/json"
                | withHeader "X-Plex-Token" $apiKey
                | getResponse }}

              {{ if $historyCall.JSON.Exists "MediaContainer" }}
                {{ $history = $historyCall.JSON.Array "MediaContainer.Metadata" }}
              {{ else }}
                {{ template "errorMsg" (concat "Could not fetch " $mediaServer " API.") }}
              {{ end }}

              {{ $usersRequestURL = concat $baseURL "/accounts" }}
              {{ $usersCall = newRequest $usersRequestURL
                | withHeader "Accept" "application/json"
                | withHeader "X-Plex-Token" $apiKey
                | getResponse }}
              {{ $users = $usersCall.JSON.Array "MediaContainer.Account" }}

            {{ else if eq $mediaServer "tautulli" }}
              {{ $historyRequestURL = concat $baseURL "/api/v2" }}
              {{ $historyCall = newRequest $historyRequestURL
                | withParameter "apikey" $apiKey
                | withParameter "cmd" "get_history"
                | withParameter "length" $historyLength
                | withParameter "media_type" $mediaTypes
                | withHeader "Accept" "application/json"
                | getResponse }}

              {{ if eq $historyCall.Response.StatusCode 200 }}
                {{ $history = $historyCall.JSON.Array "response.data.data" }}
              {{ else }}
                {{ template "errorMsg" (concat "Could not fetch " $mediaServer " API.") }}
              {{ end }}

            {{ else if or (eq $mediaServer "jellyfin") (eq $mediaServer "emby") }}
              {{ $usersRequestURL = concat $baseURL "/Users" }}
              {{ $usersCall = newRequest $usersRequestURL
                | withParameter "api_key" $apiKey
                | withHeader "Accept" "application/json"
                | getResponse }}

              {{ $usersList := $usersCall.JSON.Array "" }}
              {{ range $i, $user := $usersList }}
                {{ if eq ($user.String "Name") $userName }}
                  {{ $userID = $user.String "Id" }}
                  {{ break }}
                {{ end }}
              {{ end }}
              {{ if eq $userID "" }}
                {{ template "errorMsg" (concat "User '" $userName "' not found.") }}
              {{ end }}

              {{ $historyRequestURL = concat $baseURL "/Users/" $userID "/Items" }}
              {{ $historyCall = newRequest $historyRequestURL
                | withParameter "api_key" $apiKey
                | withParameter "Limit" $historyLength
                | withParameter "IncludeItemTypes" $mediaTypes
                | withParameter "Recursive" "true"
                | withParameter "isPlayed" "true"
                | withParameter "sortBy" "DatePlayed"
                | withParameter "sortOrder" "Descending"
                | withParameter "Fields" "UserDataLastPlayedDate"
                | withHeader "Accept" "application/json"
                | getResponse }}

              {{ $history = $historyCall.JSON.Array "Items" }}
            {{ end }}

            {{ if and (eq $historyCall.Response.StatusCode 200) (eq (len $history) 0) }}
              <p>Nothing has been played. Start streaming something!</p>
            {{ else }}
              <div class="carousel-container show-right-cutoff">
                <div class="cards-horizontal carousel-items-container">
                  {{ range $n, $item := $history }}
                    {{ $mediaType := "" }}
                    {{ $isMovie := false }}
                    {{ $isShows := false }}
                    {{ $isMusic := false }}
                    {{ $title := "" }}
                    {{ $showTitle := "" }}
                    {{ $showSeason := "" }}
                    {{ $showEpisode := "" }}
                    {{ $artist := "" }}
                    {{ $albumTitle := "" }}
                    {{ $thumbURL := "" }}
                    {{ $playedAt := "" }}

                    {{ if eq $mediaServer "plex" }}
                      {{ $userID = $item.Int "accountID" }}
                      {{ range $n, $u := $users }}
                        {{ if eq $userID ($u.Int "id") }}
                          {{ $userName = $u.String "name" }}
                          {{ break }}
                        {{ end }}
                      {{ end }}

                      {{ $mediaType = $item.String "type" }}
                      {{ $isMovie = eq $mediaType "movie" }}
                      {{ $isShows = eq $mediaType "episode" }}
                      {{ $isMusic = eq $mediaType "track" }}

                      {{ $title = $item.String "title" }}
                      {{ if $isShows }}
                        {{ $showTitle = $item.String "grandparentTitle" }}
                        {{ $showSeason = $item.String "parentIndex" }}
                        {{ $showEpisode = $item.String "index" }}
                      {{ else if $isMusic }}
                        {{ $artist = $item.String "grandparentTitle" }}
                        {{ $albumTitle = $item.String "parentTitle" }}
                      {{ end }}

                      {{ $thumbID := $item.String "thumb" }}
                      {{ if or $isShows $isMusic}}
                        {{ $thumbID = $item.String "parentThumb" }}
                      {{ end }}
                      {{ $thumbURL = concat $baseURL $thumbID "?X-Plex-Token=" $apiKey }}

                      {{ $time := $item.String "viewedAt" }}
                      {{ if $timeAbsolute }}
                        {{ $playedAt = $time | parseLocalTime "unix" | formatTime $timeFormat }}
                      {{ else }}
                        {{ $playedAt = $time | parseRelativeTime "unix" }}
                      {{ end }}

                    {{ else if eq $mediaServer "tautulli" }}
                      {{ $userName = $item.String "user" }}
                      {{ $mediaType = $item.String "media_type" }}
                      {{ $isMovie = eq $mediaType "movie" }}
                      {{ $isShows = eq $mediaType "episode" }}
                      {{ $isMusic = eq $mediaType "track" }}

                      {{ $title = $item.String "title" }}
                      {{ if $isShows }}
                        {{ $showTitle = $item.String "grandparent_title" }}
                        {{ $showSeason = $item.String "parent_media_index" }}
                        {{ $showEpisode = $item.String "media_index" }}
                      {{ else if $isMusic }}
                        {{ $artist = $item.String "grandparent_title" }}
                        {{ $albumTitle = $item.String "parent_title" }}
                      {{ end }}

                      {{ $thumbID := $item.String "thumb" }}
                      {{ $thumbURL = concat $baseURL "/api/v2?apikey=" $apiKey "&cmd=pms_image_proxy&img=" $thumbID }}

                      {{ $time := $item.String "date" }}
                      {{ if $timeAbsolute }}
                        {{ $playedAt = $time | parseLocalTime "unix" | formatTime $timeFormat }}
                      {{ else }}
                        {{ $playedAt = $time | parseRelativeTime "unix" }}
                      {{ end }}

                    {{ else if or (eq $mediaServer "jellyfin") (eq $mediaServer "emby") }}
                      {{ $mediaType = $item.String "Type" }}
                      {{ $isMovie = eq $mediaType "Movie" }}
                      {{ $isShows = eq $mediaType "Episode" }}
                      {{ $isMusic = eq $mediaType "Audio" }}

                      {{ $title = $item.String "Name" }}
                      {{ if $isShows }}
                        {{ $showTitle = $item.String "SeriesName" }}
                        {{ $showSeason = $item.String "ParentIndexNumber" }}
                        {{ $showEpisode = $item.String "IndexNumber" }}
                      {{ else if $isMusic }}
                        {{ $artist = $item.String "AlbumArtist" }}
                        {{ $albumTitle = $item.String "Album" }}
                      {{ end }}

                      {{ $thumbID := $item.String "Id" }}
                      {{ if $isShows }}
                        {{ $thumbID  = $item.String "SeasonId" }}
                      {{ end }}
                      {{ $thumbURL = concat $baseURL "/Items/" $thumbID "/Images/Primary?api_key=" $apiKey }}

                      {{ $time := $item.String "UserData.LastPlayedDate" }}
                      {{ if $timeAbsolute }}
                        {{ $playedAt = $time | parseLocalTime "rfc3339" | formatTime $timeFormat }}
                      {{ else }}
                        {{ $playedAt = $time | parseRelativeTime "rfc3339" }}
                      {{ end }}
                    {{ end }}

                    {{ $showInfoFormat := concat "Season " $showSeason " Episode " $showEpisode}}
                    {{ if $isCompact }}
                      {{ $showInfoFormat = concat "S" $showSeason "E" $showEpisode}}
                    {{ end }}

                    <div class="card widget-content-frame">
                      {{ if $showThumbnail }}
                        <img src="{{ $thumbURL | safeURL }}"
                          alt="{{ $title }} thumbnail"
                          loading="lazy"
                          class="media-server-thumbnail shrink-0"
                          style="
                            object-fit: cover;
                            border-radius: var(--border-radius) var(--border-radius) 0 0;
                            {{ if eq $thumbAspectRatio "square" }}
                              aspect-ratio: 1;
                            {{ else if eq $thumbAspectRatio "portrait" }}
                              aspect-ratio: 3/4;
                            {{ else if eq $thumbAspectRatio "landscape" }}
                              aspect-ratio: 4/3;
                            {{ else }}
                              aspect-ratio: initial;
                            {{ end }}
                          "
                        />
                      {{ end }}

                      <div class="grow padding-inline-widget margin-top-10 margin-bottom-10">
                        <ul class="flex flex-column justify-evenly margin-bottom-3 {{if $isSmallColumn}}size-h6{{end}}" style="height: 100%;">
                          {{ if $isCompact }}
                            <ul class="list-horizontal-text flex-nowrap">
                              {{ if $showUser }}
                                <li class="color-primary text-truncate">{{ $userName }}</li>
                              {{ end }}

                              {{ if $timeAbsolute }}
                                <li class="text-truncate">{{ $playedAt }}</li>
                              {{ else }}
                                <li class="shrink-0">
                                  <span {{ $playedAt }}></span>
                                  {{ if not $showUser }}
                                    <span> ago</span>
                                  {{ end }}
                                </li>
                              {{ end }}
                            </ul>

                            {{ if $isShows }}
                              <ul class="list-horizontal-text flex-nowrap">
                                <li class="text-truncate">{{ $showInfoFormat }}</li>
                                <li class="text-truncate">{{ $showTitle }}</li>
                              </ul>
                            {{ else if $isMusic }}
                              <ul class="list-horizontal-text flex-nowrap">
                                <li class="text-truncate">{{ $artist }}</li>
                                <li class="text-truncate">{{ $albumTitle }}</li>
                              </ul>
                            {{ end }}

                            <li class="text-truncate">{{ $title }}</li>
                          {{ else }}
                            {{ if $showUser }}
                              <li class="color-primary text-truncate">{{ $userName }}</li>
                            {{ end }}

                            {{ if $timeAbsolute }}
                              <li class="text-truncate">{{ $playedAt }}</li>
                            {{ else }}
                              <li class="text-truncate">
                                <span {{ $playedAt }}></span>
                                <span> ago</span>
                              </li>
                            {{ end }}

                            {{ if $isShows }}
                              <li class="text-truncate">{{ $showTitle }}</li>
                              <li class="text-truncate">{{ $showInfoFormat }}</li>
                            {{ else if $isMusic }}
                              <li class="text-truncate">{{ $artist }}</li>
                              <li class="text-truncate">{{ $albumTitle }}</li>
                            {{ end }}

                            <li class="text-truncate">{{ $title }}</li>
                          {{ end }}
                        </ul>
                      </div>
                    </div>
                  {{ end }}
                </div>
              </div>
            {{ end }}
            {{ end }}

        - type: custom-api
          frameless: true
          title: Mangas
          method: POST
          url: ${KAVITA_URL}/api/series/recently-added-v2?PageNumber=1&PageSize=0
          headers:
            Authorization: Bearer ${KAVITA_JWT}
          body-type: json
          body:
            statements:
              - comparison: 0
                value: ""
                field: 1
              - field: 19
                value: "1"
                comparison: 0
            combination: 1
            limitTo: 0
            sortOptions:
              isAscending: true
              sortField: 1
          template: |
              {{ if eq .Response.StatusCode 200 }}
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem;">
                   {{ range .JSON.Array "" }}
                    <a href="${KAVITA_URL}/library/{{ .Int "libraryId" }}/series/{{ .Int "id" }}" style="min-height: 200px;">
                      <div style="
                        background-image: url('${KAVITA_URL}/api/image/series-cover?seriesId={{ .Int "id" }}&apiKey=${KAVITA_KEY}');
                        background-size: cover;
                        background-position: center;
                        border-radius: 12px;
                        overflow: hidden;
                        margin-bottom: 1rem;
                        color: white;
                        position: relative;
                        height: 100%;
                      ">
                        <div style="
                          background: rgba(0, 0, 0, 0.6);
                          padding: 1rem;
                          height: 100%;
                          display: flex;
                          flex-direction: column;
                          justify-content: flex-end;
                        ">
                          <h3 style="margin: 0;">{{ .String "name" }}</h3>
                          <p style="margin: 0.3rem 0;">{{ .Int "pagesRead" }} / {{ .Int "pages" }} pages</p>
                          <p style="margin: 0.3rem 0;">{{ printf "%.1f" (.Float "avgHoursToRead") }} h à lire</p>
                        </div>
                      </div>
                    </a>
                  {{ end }}
                </div>
              {{ else }}
                <div>Erreur : {{ .Response.StatusCode }}</div>
                <pre>{{ .Response.Body }}</pre>
              {{ end }}

    - size: small
      widgets:
        - type: monitor
          cache: 1m
          title: Services
          style: compact
          sites:            
            - title: Overseerr
              url: http://192.168.0.26:5055/
            - title: Radarr
              url: http://192.168.0.26:7878
            - title: Sonarr
              url: http://192.168.0.26:8989
            - title: Plex
              url: http://192.168.0.26:32400/web/
            - title: Prawlarr
              url: http://192.168.0.26:9696/
            - title: Qbittorrent
              url: http://192.168.0.26:8080/
            - title: Tautulli
              url: http://192.168.0.26:8181/

        - type: custom-api
          title: Plex statistics
          cache: 6h
          allow-insecure: true
          url: ${TAUTULLI_URL}/api/v2
          parameters:
            apikey: ${TAUTULLI_KEY}
            cmd: get_libraries
          template: |
            <div class="flex justify-between text-center">
              {{ range .JSON.Array "response.data" }}
                <div>
                    <div class="color-highlight size-h3">{{ .Int "count" }}</div>
                    <div class="size-h6">{{ .String "section_name" }}</div>
                </div>
              {{ end }}
            </div>
            

        - type: custom-api
          title: Media Activites
          cache: 5m
          options:
            media-server: "tautulli"
            base-url: ${TAUTULLI_URL}
            api-key: ${TAUTULLI_KEY}
            small-column: false
            compact: true
            play-state: "indicator"
            show-thumbnail: true
            full-thumbnail: false
            show-paused: false
            show-progress-bar: false
            show-progress-info: true
            time-format: "15:04"
          template: |
            {{ $mediaServer := .Options.StringOr "media-server" "" }}
            {{ $baseURL := .Options.StringOr "base-url" "" }}
            {{ $apiKey := .Options.StringOr "api-key" "" }}

            {{ define "errorMsg" }}
              <div class="widget-error-header">
                <div class="color-negative size-h3">ERROR</div>
                <svg class="widget-error-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z"></path>
                </svg>
              </div>
              <p class="break-all">{{ . }}</p>
            {{ end }}

            {{ if or
              (eq $mediaServer "")
              (eq $baseURL "")
              (eq $apiKey "")
            }}
              {{ template "errorMsg" "Some required options are not set" }}
            {{ else }}

            {{ $isSmallColumn := .Options.BoolOr "small-column" false }}
            {{ $isCompact := .Options.BoolOr "compact" true }}
            {{ $playState := .Options.StringOr "play-state" "indicator" }}
            {{ $showThumbnail := .Options.BoolOr "show-thumbnail" false }}
            {{ $fullThumbnail := .Options.BoolOr "full-thumbnail" false }}
            {{ $showPaused := .Options.BoolOr "show-paused" false }}
            {{ $showProgressBar := .Options.BoolOr "show-progress-bar" false }}
            {{ $showProgressInfo := .Options.BoolOr "show-progress-info" true }}
            {{ $timeFormat := .Options.StringOr "time-format" "15:04" }}

            {{ $userID := "" }}
            {{ $sessionsRequestURL := "" }}
            {{ $sessionsCall := "" }}
            {{ $sessions := "" }}
            {{ $activeSessions := 0 }}

            {{ if eq $mediaServer "plex" }}
              {{ $sessionsRequestURL = concat $baseURL "/status/sessions" }}
              {{ $sessionsCall = newRequest $sessionsRequestURL
                | withHeader "Accept" "application/json"
                | withHeader "X-Plex-Token" $apiKey
                | getResponse }}

              {{ if $sessionsCall.JSON.Exists "MediaContainer" }}
                {{ $sessions = $sessionsCall.JSON.Array "MediaContainer.Metadata" }}
                {{ $activeSessions = len $sessions }}
              {{ else }}
                {{ template "errorMsg" (concat "Could not fetch " $mediaServer " API.") }}
              {{ end }}

            {{ else if eq $mediaServer "tautulli" }}
              {{ $sessionsRequestURL = concat $baseURL "/api/v2" }}
              {{ $sessionsCall = newRequest $sessionsRequestURL
                | withParameter "apikey" $apiKey
                | withParameter "cmd" "get_activity"
                | withHeader "Accept" "application/json"
                | getResponse }}

              {{ if eq $sessionsCall.Response.StatusCode 200 }}
                {{ $sessions = $sessionsCall.JSON.Array "response.data.sessions" }}
                {{ $activeSessions = len $sessions }}
              {{ else }}
                {{ template "errorMsg" (concat "Could not fetch " $mediaServer " API.") }}
              {{ end }}

            {{ else if or (eq $mediaServer "jellyfin") (eq $mediaServer "emby") }}
              {{ $sessionsRequestURL = concat $baseURL "/Sessions" }}
              {{ $sessionsCall = newRequest $sessionsRequestURL
                | withParameter "api_key" $apiKey
                | withParameter "activeWithinSeconds" "30"
                | withHeader "Accept" "application/json"
                | getResponse }}

              {{ if eq $sessionsCall.Response.StatusCode 200 }}
                {{ $sessions = $sessionsCall.JSON.Array "" }}
                {{ if eq $mediaServer "emby" }}
                  {{ range $session := $sessions }}
                    {{ if $session.Bool "PlayState.CanSeek" }}
                      {{ $activeSessions = 1 }}
                      {{ break }}
                    {{ end }}
                  {{ end }}
                {{ else }}
                  {{ $activeSessions = len $sessions }}
                {{ end }}
              {{ else }}
                {{ template "errorMsg" (concat "Could not fetch " $mediaServer " API.") }}
              {{ end }}
            {{ end }}

            {{ if and (eq $sessionsCall.Response.StatusCode 200) (eq $activeSessions 0) }}
              <p>Nothing is playing right now.</p>
            {{ else }}

              <style>
                .media-server-session-container--grid {
                  display: grid;
                  grid-template-columns: repeat(2, 1fr);
                }
                @media (max-width: 768px) {
                  .media-server-session-container--grid {
                    display: flex;
                    flex-direction: column;
                  }
                }
                .media-server-progress-container {
                  height: 1rem;
                  max-width: 32rem;
                  border: 1px solid var(--color-text-base);
                  border-radius: var(--border-radius);
                  overflow: hidden;
                }
                .media-server-progress-bar {
                  height: 100%;
                  background: var(--color-primary);
                  border-radius: 3px;
                  transition: width 1s linear;
                }
                @keyframes progress-animation { to { width: 100%; } }
              </style>

              <div class="gap-10 {{ if $isSmallColumn }}flex flex-column{{ else }}media-server-session-container--grid{{ end }}">
              {{ range $i, $session := $sessions }}
                {{ $isClient := true }}
                {{ $isPlaying := false }}
                {{ $state := "playing" }}
                {{ $isMovie := false }}
                {{ $isShows := false }}
                {{ $isMusic := false }}
                {{ $userName := "" }}
                {{ $title := "" }}
                {{ $showTitle := "" }}
                {{ $showSeason := "" }}
                {{ $showEpisode := "" }}
                {{ $artist := "" }}
                {{ $albumTitle := "" }}
                {{ $thumbURL := "" }}
                {{ $now := now | formatTime "15:04:05" | parseLocalTime "15:04:05" }}
                {{ $duration := 0 }}
                {{ $offset := 0 }}
                {{ $remainingSeconds := 0 }}

                {{ if eq $mediaServer "plex" }}
                  {{ $isPlaying = eq ($session.String "Player.state") "playing" }}
                  {{ if not $isPlaying }}
                    {{ $state = "paused"}}
                  {{ end }}

                  {{ $mediaType := $session.String "type" }}
                  {{ $isMovie = eq $mediaType "movie" }}
                  {{ $isShows = eq $mediaType "episode" }}
                  {{ $isMusic = eq $mediaType "track" }}

                  {{ $userName = $session.String "User.title" }}
                  {{ $title = $session.String "title" }}
                  {{ $showTitle = $session.String "grandparentTitle" }}
                  {{ $showSeason = $session.String "parentIndex" }}
                  {{ $showEpisode = $session.String "index" }}
                  {{ $artist = $session.String "grandparentTitle" }}
                  {{ $albumTitle = $session.String "parentTitle" }}

                  {{ $thumbID := $session.String "thumb" }}
                  {{ if or $isShows $isMusic }}
                    {{ $thumbID = $session.String "parentThumb" }}
                  {{ end }}
                  {{ $thumbURL = concat $baseURL $thumbID "?X-Plex-Token=" $apiKey }}

                  {{ $duration = $session.Float "duration" }}
                  {{ $offset = $session.Float "viewOffset" }}
                  {{ $remainingSeconds = div (sub $duration $offset) 1000 | toInt }}
                {{ else if eq $mediaServer "tautulli" }}
                  {{ $isPlaying = eq ($session.String "state") "playing" }}
                  {{ if not $isPlaying }}
                    {{ $state = "paused"}}
                  {{ end }}

                  {{ $mediaType := $session.String "media_type" }}
                  {{ $isMovie = eq $mediaType "movie" }}
                  {{ $isShows = eq $mediaType "episode" }}
                  {{ $isMusic = eq $mediaType "track" }}

                  {{ $userName = $session.String "user" }}
                  {{ $title = $session.String "title" }}
                  {{ $showTitle = $session.String "grandparent_title" }}
                  {{ $showSeason = $session.String "parent_media_index" }}
                  {{ $showEpisode = $session.String "media_index" }}
                  {{ $artist = $session.String "grandparent_title" }}
                  {{ $albumTitle = $session.String "parent_title" }}

                  {{ $thumbID := $session.String "thumb" }}
                  {{ if or $isShows $isMusic }}
                    {{ $thumbID = $session.String "parent_thumb" }}
                  {{ end }}
                  {{ $thumbURL = concat $baseURL "/api/v2?apikey=" $apiKey "&cmd=pms_image_proxy&img=" $thumbID }}

                  {{ $duration = $session.Float "duration" }}
                  {{ $offset = $session.Float "view_offset" }}
                  {{ $remainingSeconds = div (sub $duration $offset) 1000 | toInt }}
                {{ else if or (eq $mediaServer "jellyfin") (eq $mediaServer "emby") }}
                  {{ if eq $mediaServer "emby" }}
                    {{ $isClient = $session.Bool "PlayState.CanSeek" }}
                  {{ end }}
                  {{ $isPlaying = and ($session.Exists "NowPlayingItem") (not ($session.Bool "PlayState.IsPaused")) }}
                  {{ if not $isPlaying }}
                    {{ $state = "paused"}}
                  {{ end }}

                  {{ $mediaType := $session.String "NowPlayingItem.Type" }}
                  {{ $isMovie = eq $mediaType "Movie" }}
                  {{ $isShows = eq $mediaType "Episode" }}
                  {{ $isMusic = eq $mediaType "Audio" }}

                  {{ $userName = $session.String "UserName" }}
                  {{ $title = $session.String "NowPlayingItem.Name" }}
                  {{ $showTitle = $session.String "NowPlayingItem.SeriesName" }}
                  {{ $showSeason = $session.String "NowPlayingItem.ParentIndexNumber" }}
                  {{ $showEpisode = $session.String "NowPlayingItem.IndexNumber" }}
                  {{ $artist = $session.String "NowPlayingItem.AlbumArtist" }}
                  {{ $albumTitle = $session.String "NowPlayingItem.Album" }}

                  {{ $thumbID := $session.String "NowPlayingItem.Id" }}
                  {{ if $isShows }}
                    {{ $thumbID = $session.String "NowPlayingItem.ParentId" }}
                  {{ end }}
                  {{ $thumbURL = concat $baseURL "/Items/" $thumbID "/Images/Primary?api_key=" $apiKey }}

                  {{ $duration = $session.Float "NowPlayingItem.RunTimeTicks" }}
                  {{ $offset = $session.Float "PlayState.PositionTicks" }}
                  {{ $remainingSeconds = div (sub $duration $offset) 10000000 | toInt }}
                {{ end }}

                {{ $progress := mul 100 (div $offset $duration) | toInt }}
                {{ $endTime := $now.Add (duration (printf "%ds" $remainingSeconds)) | formatTime $timeFormat }}

                {{ $showInfoFormat := concat "Season " $showSeason " Episode " $showEpisode}}
                {{ if $isCompact }}
                  {{ $showInfoFormat = concat "S" $showSeason "E" $showEpisode}}
                {{ end }}

                {{ if and $isClient (or $isPlaying $showPaused) }}
                <div class="card gap-5">
                  <div class="flex items-center gap-10 size-h3">
                    <span class="color-primary">{{ $userName }}</span>
                    {{ if eq $playState "text" }}
                      <span {{ if $isPlaying }}class="color-primary"{{ end }}>
                        [{{ $state }}]
                      </span>
                    {{ else if eq $playState "indicator" }}
                      <style>
                        .media-server-indicator {
                          height: .7rem;
                          width: .7rem;
                          border-radius: 100%;
                          {{ if $isPlaying }}
                            animation: pulse 5s infinite;
                            background: var(--color-primary);
                          {{ else }}
                            background: var(--color-text-base-muted);
                          {{ end }}
                        }
                        @keyframes pulse {
                          0% { box-shadow: 0 0 0 0 var(--color-text-base); }
                          40% { box-shadow: 0 0 0 4px transparent; }
                          100% { box-shadow: 0 0 0 4px transparent; }
                        }
                      </style>
                      <div class="media-server-indicator"></div>
                    {{ end }}
                  </div>

                  <hr class="margin-bottom-5" />

                  <div class="flex items-center gap-10" style="align-items: stretch;">
                    {{ if $showThumbnail }}
                      <img src="{{ $thumbURL | safeURL }}"
                        alt="{{ $title }} thumbnail"
                        class="shrink-0"
                        loading="lazy"
                        style="
                          max-width: 7.5rem;
                          border: 2px solid var(--color-primary);
                          border-radius: var(--border-radius);
                          object-fit: cover;
                          {{ if and $isCompact (not $fullThumbnail) }} aspect-ratio: 1; {{ end }} "
                      />
                    {{ end }}
                    <ul class="flex flex-column grow justify-evenly" style="width: 0;">
                      {{ if $isCompact }}
                        {{ if $isShows }}
                          <ul class="list-horizontal-text flex-nowrap">
                            <li class="shrink-0">{{ concat "S" $showSeason "E" $showEpisode }}</li>
                            <li class="text-truncate">{{ $showTitle }}</li>
                          </ul>
                        {{ else if $isMusic }}
                          <ul class="list-horizontal-text flex-nowrap">
                            <li class="shrink-0">{{ $artist }}</li>
                            <li class="text-truncate">{{ $albumTitle }}</li>
                          </ul>
                        {{ end }}
                        <li class="text-truncate">{{ $title }}</li>
                      {{ else }}
                        {{ if $isShows }}
                          <li>{{ $showTitle }}</li>
                          <li>{{ concat "S" $showSeason "E" $showEpisode }}</li>
                        {{ else if $isMusic }}
                          <li>{{ $artist }}</li>
                          <li>{{ $albumTitle }}</li>
                        {{ end }}
                        <li>{{ $title }}</li>
                      {{ end }}

                      <li>
                        {{ if and $isPlaying $showProgressBar }}
                          <div class="flex gap-10 items-center">
                            <div class="media-server-progress-container grow">
                              <div
                                class ="media-server-progress-bar"
                                data-progress="{{ $progress }}"
                                data-remaining="{{ $remainingSeconds }}"
                                style="
                                  width: {{ $progress }}%;
                                  animation: progress-animation {{ $remainingSeconds }}s linear forwards;"
                              >
                              </div>
                            </div>
                            {{ if $showProgressInfo }}
                              <p>
                                {{ if and (not $isCompact) (not $isSmallColumn) }}
                                  ends at 
                                {{ end }}
                                {{ $endTime }}
                              </p>
                            {{ end }}
                          </div>
                        {{ end }}
                      </li>
                    </ul>
                  </div>
                </div>
                {{ end }}
              {{ end }}
            </div>
            {{ end }}
            {{ end }}